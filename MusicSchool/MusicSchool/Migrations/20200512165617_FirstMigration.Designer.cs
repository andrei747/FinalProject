// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicSchool.Areas.Admin.Models.DataDbContext;

namespace MusicSchool.Migrations
{
    [DbContext(typeof(MusicSchoolContext))]
    [Migration("20200512165617_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicSchool.Areas.Admin.Models.Courses", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Teachers")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("Teachers")
                        .IsUnique()
                        .HasFilter("[Teachers] IS NOT NULL");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            CourseName = "PianoCourses"
                        },
                        new
                        {
                            CourseId = 2,
                            CourseName = "ViolinCourses"
                        },
                        new
                        {
                            CourseId = 3,
                            CourseName = "GuitarCourses"
                        },
                        new
                        {
                            CourseId = 4,
                            CourseName = "Canto"
                        });
                });

            modelBuilder.Entity("MusicSchool.Areas.Admin.Models.Teachers", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            FirstName = "Alexandra",
                            ImageUrl = "~/images/dariescu.jpg",
                            LastName = "Dariescu",
                            ShortDescription = "Alexandra Dariescu este o pianistă solo de origine română."
                        },
                        new
                        {
                            TeacherId = 2,
                            FirstName = "Alexandru",
                            ImageUrl = "~/images/tomescu.jpg",
                            LastName = "Tomescu",
                            ShortDescription = "Alexandru Tomescu (n. 15 septembrie 1976, București, România) este un violonist român,"
                        },
                        new
                        {
                            TeacherId = 3,
                            FirstName = "Carlos",
                            ImageUrl = "~/images/santana.jpg",
                            LastName = "Santana",
                            ShortDescription = " Carlos Santana născut la 20 iulie 1947 este un chitarist mexican și american. "
                        },
                        new
                        {
                            TeacherId = 4,
                            FirstName = "Irina",
                            ImageUrl = "~/images/rimes.jpg",
                            LastName = "Rimes",
                            ShortDescription = "Irina Rimes este o cântăreață și compozitoare din Republica Moldova "
                        });
                });

            modelBuilder.Entity("MusicSchool.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("MusicSchool.Areas.Admin.Models.Courses", b =>
                {
                    b.HasOne("MusicSchool.Areas.Admin.Models.Teachers", "Teacher")
                        .WithOne("Courses")
                        .HasForeignKey("MusicSchool.Areas.Admin.Models.Courses", "Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
